{
    "data": {
        "py/b64": "ZUp6dDNkbHkzYllXQk5Eby8zLzYxblVHNjhqY0pBQml4bHBQaVhKRW9KdGR0bC9rL1BVWEFBQUFBQUFBQUFDNytjb3crcTdVa1BQR000Mk85dExCMGY5VmF3bmJsZFMybURVNk95aHFsdGE5TEZIWk9VbXp0SzVsamNyV1N0cXJ2ZGF0OU96c2hTVnk5dTZ2Y1NsUDJvYkxNSFBPVVIwMjd1UlpzMlNaSm96WitQRlZMOUJHbTFqNTVvclovb1R4bGFTb0g2cklUQ0U3SFRPMGtUUlZBNVdiSjJTL2t3WVdrcXBhbkZkbXlkajFzR0Y5cEtzUzVxMDVJblkvY0V3ZEdkNEdxV0tHaUNQT0hORkdsamN4YWhrZmNOQ3gvZHZJVXg2aW50RUJSNTA3b0kxTXhTSHFHWnh2M01rRDZzaFRHcUdpd2ZGR250MjdqbHhaZHk3TU82eU42VS92ZTZGc3VYY3RTenltamFHSHA1M2YrVWE1OHU5WWxIbEFHME1QVDc1QjV5dGxLYnRlVWVyZVpjendJbWJxSTEvNTdRcHlkeTFqanZjd1R4LzVYdDh0UDN5bk1tWjVEZE1Va3EzQ3pmTERkK2xpbnJjd1RTVzVxbHlySUgzckttWjZCYk4wa3F2V25Zcnl0NnRpcnY3bjZPVDl2YXM5YUdRVDA3VS9RU2NWYmwzeFVhT3FtTEg3MFoxVXVYUFZodzFwWXM3bUI1ZFM1OEwxbjlpM2lWbDdmOTlNMXloTmpoZ1ZzK05SaFdvMDB5bE5zOGYzU3RybmxJb3FYYmg1bkNIUGZobTI3bk12RG1pczBmMXJKMnJiVkxjUzZxZ1JlYnBhV2x4eXdScGVxNU41dWxMcVgyWFJJdDZwRkhxblNpNmQyVVNsMUJzMWN1blFLaXJGM3FlUVM4ZDJVU240Tm4xY09iZU1Tc2wzcWVQU3VYVlVTcjVIR2RkTzdxTlM5aTI2dUhSMklaWFM3MURGbGVNYnFWVEFCazM4U1NOMTV6RTZURlVhK2I4cUxXelJ4Q2VOL0ZLaGhrMmErS1NSdjJuaGlsYitjWFQ0a0dsOE9ETDBEZHNJbkpRMVpCdmNzQTFlTUF4aVZnRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBYk91cmlkR3BxS0hOTnN4amZjMldZUjdyYXp1T0E5ZXhVZmJHMjlpaG9udjdwbTgvamJYN0NSMVFRS00xYk5KTzdJUUtxbzlnbzI1aVo1UlE3OVZ2VnN5ZE0zcW84Y1kzck9YZUlVVlVpYmxiS2ZlTzZhSm0wQzBLZVhSTUgvV0RydHhHZ29NcWFSWjF1U2JTbkZSTDQ2eXIxSkRxcEY1K1hxaEQ5dmxLeUhCU01XbjMyYnVESEkyYW1MS1p3dXRzMVVHT1dzR1hhS2J3TnNIM0xGbEJqam92ZnBscXNpN3o4YUhnZXo2L3ZFSUY2UnB1WWNwdTBxN3l6MysvL3REWDEvTy9mUnd3VlFFWittNWpobktlTHZMdHBsZWYrdk9icjZkeU9ZN1NPNC9SZFJoejlITjNqeDgzL2VOVHp5RytMdjdwY1k5ejZqU0lINTFQa1RuNDhzZEZmLzZPVVpwaGh0aloyaS9oeWh5cC8vakN4VVcvdnYwbThTYkQrTXo1bXIzK0IxUEUvdmlYKzd2V2pEQlZFM2Nxdk9jaVUrUk9qQjk4NnViQk41K2RzSXRRVWpzTkhKYjc2ZFNoWFlRNkZqUlpHLzNUSm54a0xwM2FtYk9Mdm1tVFBqU1ZIdFZNM0VUSHNLbWZtMGp6WXFidm9WUFk1QTlPcEhFdGE5VFFJV3o2SnlmU3RKUmxXbWpiUTg3alIvZndvV0VuNjVUd1M5T3NheGJUcnBKbEt2aXRXZFpWcTJsVHlFb05mR2lTZGRsdUdyU3hWUDQvMUErN2NEblZ5MWdyL3BXNllaZHVwMm9WNjhXL1ZqSHMydTNVSzJMRjlLRnFhWmV1cDFJTGE0YS9VeW50MnYzVUtHSFY3QStxeEYyN29OY1ZMSno5MGZ1MGl4ZjBxb0MxbzZkNEczZnRoc3JUWnhvZHROUzdxSXMzVkJDK3lPaWNMN3lKdUhwQkphODYyK2lRTHhWSDI2Q2h0NjkrM2VUSmlpTnQwRkRkTFN3VlBWbHBsQjM2c1kxMmRxakhOTnJab0I3VGFHZUhla3lETzViQkRkUGdqcGNQQUFBQUFBQUFBQUFBQUFBQVVJR2Z4K0xDeHcvcitiRTkvbmJ4azV6R1FmaGp2c1p4dHR1ZkFUZU9zOTM5RFFIK3FvRERHUWNoNHlBVWorUExPRTUzTTQ3ZnY0UndwSVJ0R01lcGpJT1FjUkF5RGtMR1FjZzRDQmtISWVNZ1pCeUVqSU9RY1JBeURpSXAyekNPUXhrSEllTWdaQnlFaklPUWNSQXlEbUxHUWN3NENCa0hNZU1nWmh6RWpJT1FjUkF5RGtJV1FjUTJDQmtISWVNZzVFK2hoSXlERzliQkRlUGd4czlwV0FmZitHV0RHOGJCRGVNQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQTRCQmZEZjE3UlBscFF5cmhIeTAyOGZsdXYxNXNvK2pBNFhXVmhDMHJhSWEwNWY3NkhxSHhXZCtQR2xsWFViZGxMMlI4MkxkR25EV3dyN0oyQzEvSzZMQnZkVHhxZ25HVTFsdjRYb1ptZmEvZlNkOU9HMVpZY2NINVJ6WFBtM3ozY3QwTytuYmFzTExLR3k0OWNtamN0N29kOVAyNFVTMWxmUGZQcjVlZTNpSndadXBpdmM3NU9HOVFSZW1QdVBoaThTVnFKMDQ2dEk1T3gzeWNONmlqeEVjRUR5MitSczJ3U1FkVzArdWN6d09IdEpUMGlQaUp4WGVvR0RYMXlEbzZIZlB6eEJFMUpUemk5bkhsNTFlTW1uNW9CYjNPK1hIaWdLSWVIL0h3dUJkblYwcVpmZTVMblk3NTQ4anVUYjEvWHVIQnJTSm50bDZnMXpsL250bTVxd3JQeXorMGFlVE0xdk4xT3VicTBMNWwxWGhlM29tdEUyZlhucTNYT1JlSGRxMnJ5Z09UVCt1VE9MLzRQSDFPdVQ2MVkxMlZIcGh3VXMvQUpkWG4zN3IxS2Rlbjl1dXIxZ01manVrZXVLajgzRnMzUGlRNHRWdGYxWjRZSHpFbWIySDlXZGR1ZkVad2FyZkM2ajN4OHZFajQ1YStnSXg3dHowaU9yVlRZUy9LL2VOVGhVMzFDMXRYOHdQQ1V4Y29yTklqbDhnYVhienBBZUdwQ3pSVzZaRkxaQTB1M3ZMeDhha3JORmJua1V0RWpTN2U4UEYzeDY3UVdJMkhycEwxK3VidG5uNTc3QXFGMVhocTY2enRYbURUaHo4Y3UwQmRGUjdiT21yVnZCZFhiL1BveDJNWEtLdkNnMXRIemJoWmJvYXFWYWFib0tuQ2U4Nlc5T2xxR1I4TnZqYzM4V3REZXFweno3bUNYdDR0NTdQUGw4L3Q3TFdHQmFWbkw3am9oRUZmU0x0OFVXOXZ6QkE5L2FKejUzd2o2ZmJsOGN2TUVIMmZuSzg4Mzd4clkxOVQvUkYraDVndlBWMTYyOVk2Qnh1VThyWGIrKzViVytka2cxSTJ0WEZ0bmFPTkNkbld4cjMxalRZb1pGTTc5OVkzMjVpTWJlMWNYTmRzSXdLMnQzRjNIYU50T0l4Zjl1NXYyMkM5ZENsd2FJZGJodXFrWVhlejlMaGRvSTZhZERkbGx6dGw2YVpTYVVzVnVrdU85cXJ1WUtsSzkwalJXS3RackZMcTViVVh5OURPMGRQNHo0Slg3c00waUZrR04weURkMHdEQUFBQUFBQUFBQUFBQUFBQUFBQVl6MDg4RS9MejhJU01nNUMvU29PUWNSQjZHb2QxSE13NGZqa25hWTdIY2V6ZjJXRngwejF2WSsrMmpneWRKbUVhR3hkMWFPd2thY3ZZdEtWamd5ZEpuc1orSFoyYlBOV3g0OGdJdmx2MFpNYzJaQnpQamkzSU9KNGRXNUJ4UER1MklPTjRkbXhCeHZIczJJS000OW14L1dTTlk3djBhWTV0eHppZUhWdU9jYVE0dEJ6alNITmtOOGFSNnNCcWpDUGRjY1VZUjQ3RFdqR09QRWMxWWh3bERxbkRPQWdaQnlIaklHUWNoSXlEVU40NHJPTW94a0hJT0FnWkJ5SGpJR1FjaEl5RGtHMFFNZzVDdGtISU9BalpCaUhqSUdRYkJISiszYkNPbytSTnd6eE9rcjhONnpoRXlUU3M0d3lGMnpDUC9aVlB3em8yOTJvYTFyRTEyeUJtRzl5d0RXSzJ3UTNiNEladEVETU5ibGdHTWN2Z2htVVFzd3h1V0FZM1RJR1ljWERETmdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZ0V1Si81UG05MFlISlZ1M2JWakhlanFPd3p3VzAzVWIxckdVenR1d2pvVjAzNFoxckdQQU9LeGpFU08yWVI1ckdMUU42MWpCc0hGWXgvVEdiV1BwY1N3ZklJVnQ1Tm9oUTVwQnUxaTQyQzFDcEJteWlwVjczU1JHaXY2TFdMM1ViWUlrNkQ2SnhUdE5pN0p1dmc4ZHgvRFU2T3pTc3F5ZDhZZVdyLy9lNk9ScE10SXNuZk5TcFRlZGIzVHdXd2RGdlZXM2gvVWJPeW5yb3habExGellTVmtUTktsajFiN09TdnVzVVI5TDFuVlkzQVROR2xtdXJjUGlwbWhYeVZwbEhSYzRTZE5XbHVucXZNUkpHdGV5UmxYbkpVN1V1cGdGcWpvd2NxTDJ6Y3hlMUpHaEUvWG9adTZlamd5ZHBrTTFzOWQwYU93VUhhcVp2YU56a3ovcjBNM2tCWjJjL1ZuN2R1YnU1K3owQ1E0dXAyMzBCUXBJY1dvenpYS3ZVMEdTRTR0cGtubTFFbEtkMWtybHZLdldrT3lrVHVwbFhieUlWQ2RWVWkzcjZrV2t1c3l6WnlPVlI3QnlGV25LNHF6WmgzRmsyaXJNQStQSXMxT1daN2FSWmFjc3oyd2p4MFpSa3BnR0lkc2daaHVrc1EyUy9IaTl0c0Z2Q2UvWE5JNVY5SVp0NHhEZU1ESGpJR1FjeEl3REFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFPQklYMStqYjhDa3Z2NDIraHJNNSt1MzBWZGhMbDgvakw0UDAvZzVEZnZnSDVmVHNBL3VwbUVlaDd1ZmhuMGNLMkVZOW5HZTlGbll4emtLVm1FZUozZ3pEUHZZVzRWdG1NZXVqSU5JblcxWXg1YU1nMGl0YlZqSGhveURTTDF0R01kMktvN0RPalpUY3h2R3NabXE0N0NPcmRUZGhuRnN4VGlJMkFZaDR5Qm1HOFNNNHo5YmhLanIrRzFzRTZTSk04ZXhVNWFXVHR2R2JubmFPbXNjK3lWcXl6Yld6dFNXYWF3ZHE2MHpwcEVkYy9SOUozSENOQXBDanI3eExMYWZocC8xZk9HcWw1MktLOWpHZWlHYnVXeGptOGFLdHJGbzFuNjJxS3B3R2l0SDdtVDlqc3Ezc1hweW5yelpobkhzN2RVMmpHTnY3OFpoSFZzekRrTEdRY2c0Q0wwY2gzVnN6VGdJMlFZeDJ5QmtITVJzZzVodEVMSU5ZcmJCRGR2Z2puRnd5emE0WXh2Y01RMXVHUVozREFNQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlOdi9BS1ZBMHVRPQ=="
    },
    "shape": {
        "py/tuple": [
            1024,
            541
        ]
    }
}