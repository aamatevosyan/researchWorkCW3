{
    "data": {
        "py/b64": "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"
    },
    "shape": {
        "py/tuple": [
            1798,
            1280
        ]
    }
}