{
    "data": {
        "py/b64": ""
    },
    "shape": {
        "py/tuple": [
            990,
            700
        ]
    }
}