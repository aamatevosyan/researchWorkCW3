{
    "data": {
        "py/b64": "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"
    },
    "shape": {
        "py/tuple": [
            990,
            700
        ]
    }
}