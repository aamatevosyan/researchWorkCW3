{
    "data": {
        "py/b64": ""
    },
    "shape": {
        "py/tuple": [
            324,
            800
        ]
    }
}