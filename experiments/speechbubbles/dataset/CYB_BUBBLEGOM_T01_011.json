{
    "data": {
        "py/b64": ""
    },
    "shape": {
        "py/tuple": [
            1060,
            750
        ]
    }
}