{
    "data": {
        "py/b64": ""
    },
    "shape": {
        "py/tuple": [
            1798,
            1280
        ]
    }
}