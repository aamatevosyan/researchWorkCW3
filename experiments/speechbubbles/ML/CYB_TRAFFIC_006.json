{
    "data": {
        "py/b64": ""
    },
    "shape": {
        "py/tuple": [
            720,
            700
        ]
    }
}